# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev
version: "3"

dotenv: [".env"]
set: [pipefail]
shopt: [globstar]

tasks:
  init:
    desc: Setup local dev env
    summary: |
      This is executed automatically by pixi.
      ie: When run `pixi run code`, this task will run just before opening VsCode.
    cmds:
      - lefthook install -f
      - git config pull.rebase true
      - git config core.editor "code --wait"
      - git config commit.template "$PWD/.gitmsgtpl"

  test:
    desc: Runs some simple end to end tests against a kind cluster
    env:
      KUBECONFIG: ./.kube/config
    cmds:
      - kind create cluster
      - defer: rm -rf ./.kube
      - defer: kind delete cluster
      - kubectl cluster-info
      - deno test -A ./tests/e2e.test.ts
      - deno run -A ./scripts/dnt.ts ./tests/node/package 0.0.0
      - cd ./tests/node && npm install && KUBECONFIG="../../.kube/config" node --import tsx --test tests.mts && cd -

  package:
    desc: This is triggered by cog as a pre_bump_hook to generate all the final publishable artifacts
    requires:
      vars:
        - VERSION
    cmds:
      - deno run -A ./scripts/dnt.ts ./publish/node/package {{.VERSION}}
      - >-
          echo '
            const config = JSON.parse(Deno.readTextFileSync("deno.json"));
            config.version = "{{.VERSION}}";
            Deno.writeTextFileSync("deno.json", JSON.stringify(config, null, 2));
          ' | deno run -A -

  publish:
    desc: This is triggered by cog as a post_bump_hook to publish all the final publishable artifacts
    requires:
      vars:
        - VERSION
    cmds:
      - cd ./publish/node/package && npm publish --provenance --access public && cd -
      - git push && git push --tags
      - cog changelog --at v{{ .VERSION }} > GITHUB_CHANGELOG.md
      - gh release create v{{ .VERSION }} -F GITHUB_CHANGELOG.md
      - rm GITHUB_CHANGELOG.md
      - deno publish
